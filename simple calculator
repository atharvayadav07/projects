html/css and js with rgb bg



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>RGB Calculator</title>
  <style>
    /* RGB animated background */
    body {
      margin: 0;
      padding: 0;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(270deg, #ff0000, #00ff00, #0000ff, #ff00ff, #00ffff, #ffff00);
      background-size: 1200% 1200%;
      animation: rgbBackground 20s ease infinite;
    }

    @keyframes rgbBackground {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    .calculator {
      background-color: rgba(46, 46, 46, 0.95);
      padding: 25px;
      border-radius: 20px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.8);
      width: 320px;
      backdrop-filter: blur(5px);
    }

    #display {
      width: 100%;
      height: 60px;
      font-size: 28px;
      padding: 12px;
      border: none;
      border-radius: 10px;
      background-color: #000;
      color: #00ff00;
      text-align: right;
      font-family: 'Courier New', Courier, monospace;
      box-shadow: inset 0 0 10px #0f0;
      letter-spacing: 1px;
    }

    .buttons {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 12px;
      margin-top: 20px;
    }

    button {
      padding: 18px;
      font-size: 20px;
      border: none;
      border-radius: 10px;
      background-color: #444;
      color: white;
      cursor: pointer;
      transition: all 0.2s ease-in-out;
    }

    button:hover {
      background-color: #666;
      transform: scale(1.05);
    }

    button:active {
      background-color: #888;
    }
  </style>
</head>
<body>

  <div class="calculator" role="region" aria-label="Basic Calculator">
    <input type="text" id="display" aria-label="Calculator display" disabled />

    <div class="buttons">
      <button onclick="clearDisplay()">C</button>
      <button onclick="appendToDisplay('/')">÷</button>
      <button onclick="appendToDisplay('*')">×</button>
      <button onclick="appendToDisplay('-')">−</button>

      <button onclick="appendToDisplay('7')">7</button>
      <button onclick="appendToDisplay('8')">8</button>
      <button onclick="appendToDisplay('9')">9</button>
      <button onclick="appendToDisplay('+')">+</button>

      <button onclick="appendToDisplay('4')">4</button>
      <button onclick="appendToDisplay('5')">5</button>
      <button onclick="appendToDisplay('6')">6</button>
      <button onclick="calculateResult()">=</button>

      <button onclick="appendToDisplay('1')">1</button>
      <button onclick="appendToDisplay('2')">2</button>
      <button onclick="appendToDisplay('3')">3</button>
      <div></div>

      <button onclick="appendToDisplay('0')">0</button>
      <button onclick="appendToDisplay('.')">.</button>
      <div></div>
      <div></div>
    </div>
  </div>

  <script>
    function appendToDisplay(value) {
      document.getElementById('display').value += value;
    }

    function clearDisplay() {
      document.getElementById('display').value = '';
    }

    function calculateResult() {
      try {
        const result = eval(document.getElementById('display').value);
        document.getElementById('display').value = result;
      } catch (error) {
        document.getElementById('display').value = 'Error';
      }
    }
  </script>

</body>
</html>
